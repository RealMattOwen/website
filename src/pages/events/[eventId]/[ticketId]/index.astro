---
import * as Sentry from "@sentry/astro";
import { getEntry } from "astro:content";
import { getInviteUrls } from "../../../../utils.ts";
import Layout from "../../../../layouts/Layout.astro";
import Hero from "../../../../sections/Hero.astro";
import ButtonLink from "../../../../components/ButtonLink.astro";
import { API_URL_TICKETS, API_HEADERS_TICKETS } from "../../../../constants";

export const prerender = false;

const { eventId, ticketId } = Astro.params;
if (!eventId || !ticketId) {
  Sentry.captureMessage("Access non-existing event.");
  return Astro.redirect("/404");
}

const entry = await getEntry("events", eventId);
if (entry === undefined) {
  Sentry.captureMessage("Access non-existing event.");
  return Astro.redirect("/404");
}

let ticketConfirmed = false;

try {
  const response = await fetch(`${API_URL_TICKETS}/${eventId}/${ticketId}`, {
    ...API_HEADERS_TICKETS,
  });

  if (!response.ok) {
    throw new Error("Ticket doesn't exist.");
  }

  const responseJson:
    | { status: "success"; statusCode: number; data: any; error: null }
    | { status: "error"; statusCode: number; data: null; error: string } =
    await response.json();

  if (responseJson.data.value?.confirmed) {
    ticketConfirmed = true;

    // no cache in the browser
    Astro.response.headers.set(
      "Cache-Control",
      "public, max-age=0, must-revalidate",
    );

    // cnd cache for a week
    // serve stale up to a month
    Astro.response.headers.set(
      "Netlify-CDN-Cache-Control",
      "public, durable, s-maxage=604800, stale-while-revalidate=2629746",
    );
  }
} catch (error) {
  Sentry.captureException(error);
  return Astro.redirect("/404");
}

const {
  data: { id, name, description, location, dateStart, dateEnd },
} = entry;

const inviteUrls = getInviteUrls({
  id,
  name,
  description,
  location,
  dateStart,
  dateEnd,
});
---

<Layout title={`${name} | NN1 Dev Club`} description={description} noIndex>
  {
    ticketConfirmed ? (
      <Hero
        title="🎉 Your ticket is confirmed"
        description="Thanks a lot for signing up! We are looking forward to seeing you soon. Until then, stay safe!"
      >
        <p>
          Add it to your calendar: <a href={inviteUrls.iCal}>iCalendar</a> or{" "}
          <a href={inviteUrls.google}>Google Calendar</a>
        </p>
        <ButtonLink href={`/events/${id}`} text="Go to event details" />
      </Hero>
    ) : (
      <Hero
        title="⚠️ Please confirm your email"
        description="We don't like bots, so to ensure you are not one, please confirm your email address by clicking the link we just sent you. We won't ask you to do it for future signups. You will be all set up!"
      >
        <ButtonLink href={`/events/${id}`} text="Go to event details" />
      </Hero>
    )
  }
</Layout>
